type felt252 = felt252;
type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type Tuple<felt252> = Struct<ut@Tuple, felt252>;
type core::panics::Panic = Struct<ut@core::panics::Panic>;
type Array<felt252> = Array<felt252>;
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>>;
type core::panics::PanicResult::<(core::felt252,)> = Enum<ut@core::panics::PanicResult::<(core::felt252,)>, Tuple<felt252>, Tuple<core::panics::Panic, Array<felt252>>>;
type Unit = Struct<ut@Tuple>;
type Tuple<Unit> = Struct<ut@Tuple, Unit>;
type core::panics::PanicResult::<((),)> = Enum<ut@core::panics::PanicResult::<((),)>, Tuple<Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type Uninitialized<felt252> = Uninitialized<felt252>;
type BuiltinCosts = BuiltinCosts;
type NonZero<felt252> = NonZero<felt252>;

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc felt252_const<10> = felt252_const<10>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@fibonacci::fibonacci::fib> = function_call<user@fibonacci::fibonacci::fib>;
libfunc enum_match<core::panics::PanicResult::<(core::felt252,)>> = enum_match<core::panics::PanicResult::<(core::felt252,)>>;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<Tuple<felt252>> = struct_deconstruct<Tuple<felt252>>;
libfunc function_call<user@core::debug::Felt252PrintImpl::print> = function_call<user@core::debug::Felt252PrintImpl::print>;
libfunc drop<Unit> = drop<Unit>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 0> = enum_init<core::panics::PanicResult::<((),)>, 0>;
libfunc store_temp<core::panics::PanicResult::<((),)>> = store_temp<core::panics::PanicResult::<((),)>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 1> = enum_init<core::panics::PanicResult::<((),)>, 1>;
libfunc alloc_local<felt252> = alloc_local<felt252>;
libfunc finalize_locals = finalize_locals;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<felt252> = drop<felt252>;
libfunc drop<Uninitialized<felt252>> = drop<Uninitialized<felt252>>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc jump = jump;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_sub = felt252_sub;
libfunc felt252_const<2> = felt252_const<2>;
libfunc store_local<felt252> = store_local<felt252>;
libfunc felt252_add = felt252_add;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<felt252> = rename<felt252>;
libfunc struct_construct<Tuple<felt252>> = struct_construct<Tuple<felt252>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 0> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::felt252,)>> = store_temp<core::panics::PanicResult::<(core::felt252,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 1> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc function_call<user@core::debug::print_felt252> = function_call<user@core::debug::print_felt252>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc print = print;

disable_ap_tracking() -> ();
felt252_const<10>() -> ([2]);
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<GasBuiltin>([1]) -> ([7]);
store_temp<felt252>([2]) -> ([8]);
function_call<user@fibonacci::fibonacci::fib>([6], [7], [8]) -> ([3], [4], [5]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([5]) { fallthrough([9]) 19([10]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([9]) -> ([11]);
store_temp<felt252>([11]) -> ([13]);
function_call<user@core::debug::Felt252PrintImpl::print>([13]) -> ([12]);
drop<Unit>([12]) -> ();
struct_construct<Unit>() -> ([14]);
struct_construct<Tuple<Unit>>([14]) -> ([15]);
enum_init<core::panics::PanicResult::<((),)>, 0>([15]) -> ([16]);
store_temp<RangeCheck>([3]) -> ([17]);
store_temp<GasBuiltin>([4]) -> ([18]);
store_temp<core::panics::PanicResult::<((),)>>([16]) -> ([19]);
return([17], [18], [19]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<((),)>, 1>([10]) -> ([20]);
store_temp<RangeCheck>([3]) -> ([21]);
store_temp<GasBuiltin>([4]) -> ([22]);
store_temp<core::panics::PanicResult::<((),)>>([20]) -> ([23]);
return([21], [22], [23]);
alloc_local<felt252>() -> ([4]);
finalize_locals() -> ();
disable_ap_tracking() -> ();
get_builtin_costs() -> ([5]);
store_temp<BuiltinCosts>([5]) -> ([5]);
withdraw_gas_all([0], [1], [5]) { fallthrough([6], [7]) 108([8], [9]) };
branch_align() -> ();
dup<felt252>([2]) -> ([2], [10]);
store_temp<RangeCheck>([6]) -> ([6]);
felt252_is_zero([10]) { fallthrough() 43([11]) };
branch_align() -> ();
drop<felt252>([2]) -> ();
drop<Uninitialized<felt252>>([4]) -> ();
felt252_const<1>() -> ([12]);
store_temp<RangeCheck>([6]) -> ([13]);
store_temp<GasBuiltin>([7]) -> ([14]);
store_temp<felt252>([12]) -> ([15]);
jump() { 87() };
branch_align() -> ();
drop<NonZero<felt252>>([11]) -> ();
felt252_const<1>() -> ([16]);
dup<felt252>([2]) -> ([2], [18]);
felt252_sub([18], [16]) -> ([17]);
store_temp<felt252>([17]) -> ([17]);
felt252_is_zero([17]) { fallthrough() 58([19]) };
branch_align() -> ();
drop<felt252>([2]) -> ();
drop<Uninitialized<felt252>>([4]) -> ();
felt252_const<1>() -> ([20]);
store_temp<RangeCheck>([6]) -> ([21]);
store_temp<GasBuiltin>([7]) -> ([22]);
store_temp<felt252>([20]) -> ([23]);
jump() { 84() };
branch_align() -> ();
drop<NonZero<felt252>>([19]) -> ();
felt252_const<1>() -> ([24]);
dup<felt252>([2]) -> ([2], [26]);
felt252_sub([26], [24]) -> ([25]);
store_temp<RangeCheck>([6]) -> ([30]);
store_temp<GasBuiltin>([7]) -> ([31]);
store_temp<felt252>([25]) -> ([32]);
function_call<user@fibonacci::fibonacci::fib>([30], [31], [32]) -> ([27], [28], [29]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([29]) { fallthrough([33]) 100([34]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([33]) -> ([3]);
felt252_const<2>() -> ([35]);
felt252_sub([2], [35]) -> ([36]);
store_temp<RangeCheck>([27]) -> ([40]);
store_temp<GasBuiltin>([28]) -> ([41]);
store_temp<felt252>([36]) -> ([42]);
store_local<felt252>([4], [3]) -> ([3]);
function_call<user@fibonacci::fibonacci::fib>([40], [41], [42]) -> ([37], [38], [39]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([39]) { fallthrough([43]) 93([44]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([43]) -> ([45]);
felt252_add([3], [45]) -> ([46]);
store_temp<RangeCheck>([37]) -> ([21]);
store_temp<GasBuiltin>([38]) -> ([22]);
store_temp<felt252>([46]) -> ([23]);
rename<RangeCheck>([21]) -> ([13]);
rename<GasBuiltin>([22]) -> ([14]);
rename<felt252>([23]) -> ([15]);
struct_construct<Tuple<felt252>>([15]) -> ([47]);
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([47]) -> ([48]);
store_temp<RangeCheck>([13]) -> ([49]);
store_temp<GasBuiltin>([14]) -> ([50]);
store_temp<core::panics::PanicResult::<(core::felt252,)>>([48]) -> ([51]);
return([49], [50], [51]);
branch_align() -> ();
drop<felt252>([3]) -> ();
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([44]) -> ([52]);
store_temp<RangeCheck>([37]) -> ([53]);
store_temp<GasBuiltin>([38]) -> ([54]);
store_temp<core::panics::PanicResult::<(core::felt252,)>>([52]) -> ([55]);
return([53], [54], [55]);
branch_align() -> ();
drop<felt252>([2]) -> ();
drop<Uninitialized<felt252>>([4]) -> ();
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([34]) -> ([56]);
store_temp<RangeCheck>([27]) -> ([57]);
store_temp<GasBuiltin>([28]) -> ([58]);
store_temp<core::panics::PanicResult::<(core::felt252,)>>([56]) -> ([59]);
return([57], [58], [59]);
branch_align() -> ();
drop<felt252>([2]) -> ();
drop<Uninitialized<felt252>>([4]) -> ();
array_new<felt252>() -> ([60]);
felt252_const<375233589013918064796019>() -> ([61]);
store_temp<felt252>([61]) -> ([61]);
array_append<felt252>([60], [61]) -> ([62]);
struct_construct<core::panics::Panic>() -> ([63]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([63], [62]) -> ([64]);
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([64]) -> ([65]);
store_temp<RangeCheck>([8]) -> ([66]);
store_temp<GasBuiltin>([9]) -> ([67]);
store_temp<core::panics::PanicResult::<(core::felt252,)>>([65]) -> ([68]);
return([66], [67], [68]);
store_temp<felt252>([0]) -> ([2]);
function_call<user@core::debug::print_felt252>([2]) -> ([1]);
drop<Unit>([1]) -> ();
struct_construct<Unit>() -> ([3]);
store_temp<Unit>([3]) -> ([4]);
return([4]);
array_new<felt252>() -> ([1]);
array_append<felt252>([1], [0]) -> ([2]);
store_temp<Array<felt252>>([2]) -> ([2]);
print([2]) -> ();
struct_construct<Unit>() -> ([3]);
store_temp<Unit>([3]) -> ([4]);
return([4]);

fibonacci::fibonacci::main@0([0]: RangeCheck, [1]: GasBuiltin) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<((),)>);
fibonacci::fibonacci::fib@25([0]: RangeCheck, [1]: GasBuiltin, [2]: felt252) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::felt252,)>);
core::debug::Felt252PrintImpl::print@122([0]: felt252) -> (Unit);
core::debug::print_felt252@128([0]: felt252) -> (Unit);
